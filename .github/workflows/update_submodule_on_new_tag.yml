name: Update Submodule on New Tag

on:
  schedule:
    - cron: '0 6 * * *'
  workflow_dispatch:

jobs:
  update_submodule_on_new_tag:
    runs-on: ubuntu-latest

    outputs:
      latest_tag: ${{ steps.latest_tag.outputs.latest_tag }}
      current_tag: ${{ steps.current_tag.outputs.current_tag }}

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Get submodule path from .gitmodules
        id: get_submodule_path
        run: |
          SUBMODULE_PATH=$(grep -oP '(?<=path = ).*' .gitmodules | head -n 1)
          echo "submodule_path=$SUBMODULE_PATH" >> $GITHUB_ENV

      - name: Get latest tag from submodule origin
        id: latest_tag
        run: |
          cd ${{ env.submodule_path }}
          git fetch --tags
          LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "latest_tag=$LATEST_TAG" >> $GITHUB_ENV

      - name: Check current submodule tag
        id: current_tag
        run: |
          cd ${{ env.submodule_path }}
          CURRENT_TAG=$(git describe --tags --abbrev=0)
          echo "current_tag=$CURRENT_TAG" >> $GITHUB_ENV

      - name: Trigger Docker build workflow
        if: env.latest_tag != env.current_tag
        run: |
          curl -X POST \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          https://api.github.com/repos/${{ github.repository }}/dispatches \
          -d '{"event_type": "trigger_docker_build", "client_payload": {"latest_tag": "${{ env.latest_tag }}", "current_tag": "${{ env.current_tag }}"}}'
